package com.bftcom.docgenerator.ai.chatclients

import com.bftcom.docgenerator.ai.model.CoderExplainRequest
import org.springframework.ai.chat.client.ChatClient
import org.springframework.beans.factory.annotation.Qualifier
import org.springframework.stereotype.Component

@Component
class OllamaCoderClient(
    @param:Qualifier("coderChatClient")
    private val chat: ChatClient
) {
    private val SYSTEM_PROMPT = """
        –¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Å—Ç–∞—Ä—à–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ (Senior Developer) –∏ IT-–∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä.
        –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞ –∏ –¥–∞—Ç—å –ø–æ –Ω–µ–º—É —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ,
        —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –≥—Ä–∞–º–æ—Ç–Ω–æ–µ –∏ –ª–∞–∫–æ–Ω–∏—á–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –Ω–∞ –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï.

        ## üìú –ü—Ä–∞–≤–∏–ª–∞:
        1.  **–¢–æ—á–Ω–æ—Å—Ç—å:** –û—Å–Ω–æ–≤—ã–≤–∞–π —Å–≤–æ–π –∞–Ω–∞–ª–∏–∑ –ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–∫–æ–¥, FQN, –ø–æ–¥—Å–∫–∞–∑–∫–∏).
        2.  **–ë–µ–∑ –¥–æ–º—ã—Å–ª–æ–≤:** –ù–µ –¥–µ–ª–∞–π –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–π –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä–∞—è —è–≤–Ω–æ –Ω–µ –≤–∏–¥–Ω–∞ –≤ –∫–æ–¥–µ. –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, –ø—Ä—è–º–æ —É–∫–∞–∂–∏ –Ω–∞ —ç—Ç–æ.
        3.  **–Ø–∑—ã–∫:** –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
        4.  **–§–æ—Ä–º–∞—Ç:** –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown.

        ## üìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞
        –¢—ã –û–ë–Ø–ó–ê–ù –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –°–¢–†–û–ì–û —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑–¥–µ–ª—ã –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏:

        ### 1. üéØ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        (–ß—Ç–æ —ç—Ç–æ? –û–ø–∏—à–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∫–æ–¥–∞ (–∫–ª–∞—Å—Å, –º–µ—Ç–æ–¥, –ø–æ–ª–µ, —Ñ—É–Ω–∫—Ü–∏—è) –æ–¥–Ω–∏–º-–¥–≤—É–º—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏.)

        ### 2. ‚öôÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
        (–ü–æ—à–∞–≥–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥. 
        - –ï—Å–ª–∏ —ç—Ç–æ –º–µ—Ç–æ–¥/—Ñ—É–Ω–∫—Ü–∏—è: –æ–ø–∏—à–∏ –µ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
        - –ï—Å–ª–∏ —ç—Ç–æ –∫–ª–∞—Å—Å: –æ–ø–∏—à–∏ –µ–≥–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ (responsibilities) –∏ –∫–ª—é—á–µ–≤—ã–µ –ø—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã/–ø–æ–ª—è.)

        ### 3. üîó –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏ —Å–≤—è–∑–∏
        (–ö–∞–∫ —ç—Ç–æ—Ç –∫–æ–¥, –≤–µ—Ä–æ—è—Ç–Ω–æ, –≤–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ —Å–∏—Å—Ç–µ–º—É? –ò—Å–ø–æ–ª—å–∑—É–π "–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ (FQN)" –∏ "–ü–æ–¥—Å–∫–∞–∑–∫–∏"
        –¥–ª—è –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–π –æ –µ–≥–æ —Ä–æ–ª–∏. –ù–∞–ø—Ä–∏–º–µ—Ä: "–≠—Ç–æ DTO, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–ª—è...", "–≠—Ç–æ –º–µ—Ç–æ–¥ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è...",
        "–≠—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Spring, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞...")
        """.trimIndent()

    fun explain(req: CoderExplainRequest): String {
        val userMessage = buildString {
            appendLine("## ‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            appendLine("* **–Ø–∑—ã–∫:** ${req.language}")
            appendLine("* **–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ (FQN):** ${req.nodeFqn}")
            if (!req.hints.isNullOrBlank()) {
                appendLine("* **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ (Hints):**")
                appendLine(req.hints)
            }
            appendLine("* **–§—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞:**")
            appendLine("```${req.language.lowercase()}")
            appendLine(req.codeExcerpt.trim())
            appendLine("```")
        }

        val result = chat.prompt()
            .system(SYSTEM_PROMPT)
            .user(userMessage)
            .call()
            .content()
        return result.orEmpty().trim()
    }
}